#. ******* coding:utf-8 AUTOHEADER START v1.3 *******
#. vim: fileencoding=utf-8 syntax=config sw=4 ts=4 et
#.
#. Â© 2007-2011 Nima Talebi <nima at autonomy dot net dot au>
#.                         <nt at securusglobal dot com dot au>
#.
#. $HeadURL::                                                                  $
#. $LastChangedBy::                                                            $
#. $LastChangedDate::                                                          $
#. $LastChangedRevision::                                                      $
#. $                                                                           $
#. $AutoHeaderSerial::20110315                                                 $
#.
#. This file is part of the Insecurity Suite.
#.
#.     Insecurity is free software: you can redistribute it and/or modify
#.     it under the terms of the GNU General Public License as published by
#.     the Free Software Foundation, either version 3 of the License, or
#.     (at your option) any later version.
#.
#.     Insecurity is distributed in the hope that it will be useful,
#.     but WITHOUT ANY WARRANTY; without even the implied warranty of
#.     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#.     GNU General Public License for more details.
#.
#.     You should have received a copy of the GNU General Public License
#.     along with Insecurity.  If not, see <http://www.gnu.org/licenses/>.
#.
#. THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#. WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#. MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#. EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#. INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#. LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#. PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#. LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#. OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#. ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#.
#. ADAPTED M. STONE & T. PARKER DISCLAIMER: THIS SOFTWARE COULD RESULT IN INJURY
#. AND/OR DEATH, AND AS SUCH, IT SHOULD NOT BE BUILT, INSTALLED OR USED BY ANYONE.
#. ******* AUTOHEADER END v1.3 *******

[resource]
valid = session, scan, report, report/scorecard, appliance, asset/ip, asset/vhost

################################################################################
[session-options]
action                     = login:$1, logout:$1,
username                   = login:$1,
password                   = login:$1,
echo_request               = login:$0, logout:$0,

[session-validators]
action                     = login, logout,

################################################################################
[scan-options]
action                     = list:$1, cancel:$1, pause:$1, resume:$1, fetch:$1,
echo_request               = list:$0, cancel:$0, pause:$0, resume:$0,
scan_ref                   = list:$0, cancel:$1, pause:$1, resume:$1, fetch:$1
state                      = list:$0,
type                       = list:$0,
target                     = list:$0,
user_login                 = list:$0,
launched_after_datetime    = list:$0,
launched_before_datetime   = list:$0,
show_args                  = list:$0,
show_op                    = list:$0,
show_status                = list:$0,
show_last                  = list:$0,
ips                        = fetch:$0,
mode                       = fetch:$0,
output_format              = fetch:$0,

[scan-validators]
action                     = list, cancel, pause, resume, fetch,
echo_request               = $0, $1
state                      = Running, Paused, Canceled, Finished, Error, Queued
type                       = On-Demand, Scheduled, API
show_args                  = $0, $1
show_op                    = $0, $1
show_status                = $0, $1
show_last                  = $0, $1
mode                       = brief, extended
output_format              = csv, json
scan_ref                   = 'lambda(s): True in [s.startswith(ss) for ss in ("scan/", "compliance/", "was/", "qsap/", "map/")]'

################################################################################
[appliance-options]
action                     = list:$1,
scan_ref                   = list:$0,
echo_request               = list:$0,
output_mode                = list:$0,
scan_details               = list:$0,
busy                       = list:$0,

[appliance-validators]
action                     = list,
echo_request               = $0, $1
output_mode                = brief, full
scan_details               = $0, $1
busy                       = $0, $1
scan_ref                   = 'lambda(s): True in [s.startswith(ss) for ss in ("scan/", "compliance/", "was/", "qsap/", "map/")]'


################################################################################
[report-options]
action                     = list:$1, launch:$1, cancel:$1, fetch:$1, delete:$1,
echo_request               = list:$0, launch:$0, cancel:$0, fetch:$0, delete:$0,
id                         = list:$0, cancel:$1, fetch:$1, delete:$1,
state                      = list:$0,
user_login                 = list:$0,
expires_before_datatime    = list:$0,
template_id                = launch:$1,
report_title               = launch:$0,
output_format              = launch:$1,
pdf_password               = launch:$0,
recipient_group            = launch:$0,
domain                     = launch:$0,
ip_restriction             = launch:$0,
report_refs                = launch:$0,
ips                        = launch:$0,
asset_group_ids            = launch:$0,
assignee_type              = launch:$0,
policy_id                  = launch:$0,

[report-validators]
action                     = list, launch, cancel, fetch, delete,
echo_request               = $0, $1
state                      = Submitted, Running, Finished, Canceled, Errors
output_format              = pdf, html, csv, mht, xml, online
pdf_password               = 'lambda(s): len(s) >= 8 and len(s) <= 32'
recipient_group            = 'lambda(s): len(s) <= 50'
report_type                = Map, Scan, Remediation, Compliance, PCI, Policy, Patch
assignee_type              = User, All

################################################################################
[report/scorecard-options]
action                     = launch:$1,
echo_request               = launch:$0,
name                       = launch:$1,
report_title               = launch:$0,
output_format              = launch:$1,
pdf_password               = launch:$0,
recipient_group            = launch:$0,
source                     = launch:$0,
asset_groups               = launch:$0,
all_asset_groups           = launch:$0,
business_unit              = launch:$0,
division                   = launch:$0,
function                   = launch:$0,
location                   = launch:$0,
patch_qids                 = launch:$0,
missing_quids              = launch:$0,

[report/scorecard-validators]
action                     = launch,
echo_request               = $0, $1,
name                       = Asset Group Vulnerability Report, Ignored Vulnerability Report, Most Prevalent Vulnerability Report, Most Vulnerable Hosts Report, Patch Report
report_title               = 'lambda(s): len(s) <= 128'
output_format              = pdf, html, csv, mht, xml, online
source                     = asset_groups, business_units,
all_asset_groups           = $0, $1

################################################################################
[asset/ip-options]
action                     = list:$1,
echo_request               = list:$0,
ips                        = list:$0,
tracking_method            = list:$0,
compliance_enabled         = list:$0,

[asset/ip-validators]
action                     = list,
echo_request               = $0, $1,
tracking_method            = IP, DNS, NETBIOS,
compliance_enabled         = $0, $1,

################################################################################
[asset/host-options]
action                     = list:$1, purge:$1,
echo_request               = list:$0, purge:$0,
details                    = list:$0,
ips                        = list:$0, purge:$0,
ids                        = list:$0, purge:$0,
ag_ids                     = list:$0, purge:$0,
ag_titles                  = list:$0, purge:$0,
id_min                     = list:$0,
id_max                     = list:$0,
no_vm_scan_since           = list:$0, purge:$0,
no_compliance_scan_since   = list:$0, purge:$0,
compliance_enabled         = list:$0, purge:$0,
os_pattern                 = list:$0, purge:$0,

[asset/host-validators]
action                     = list, purge,
echo_request               = $0, $1
details                    = Basic, Basic/AGs, All, All/AGs, None
tracking_method            = IP, DNS, NETBIOS
compliance_enabled         = $0, $1


################################################################################
[asset/host/vm/detection-options]
action                     = list:$1,
echo_request               = list:$0,
ips                        = list:$0,
ids                        = list:$0,
id_min                     = list:$0,
id_max                     = list:$0,
ag_ids                     = list:$0,
ag_titles                  = list:$0,
no_vm_scan_since           = list:$0,
compliance_enabled         = list:$0,
os_pattern                 = list:$0,
qids                       = list:$0,
severities                 = list:$0,
show_igs                   = list:$0,
include_search_list_titles = list:$0,
exclude_search_list_titles = list:$0,
include_search_list_ids    = list:$0,
exclude_search_list_ids    = list:$0,

[asset/host/vm/detection-validators]
action                     = list,
echo_request               = $0, $1
details                    = Basic, Basic/AGs, All, All/AGs, None,
tracking_method            = IP, DNS, NETBIOS,
compliance_enabled         = $0, $1,


################################################################################
[asset/vhost-options]
action                     = list:$1, create:$1, update:$1, delete:$1, add_fqdn:$1, delete_fqdn:$1,
echo_request               = list:$0, create:$0, update:$0, delete:$0, add_fqdn:$0, delete_fqdn:$0,
ip                         = list:$0, create:$0, update:$0, delete:$0, add_fqdn:$0, delete_fqdn:$0,
port                       = list:$0, create:$0, update:$0, delete:$0, add_fqdn:$0, delete_fqdn:$0,
fqdn                       = create:$0, update:$0, delete:$0, add_fqdn:$0, delete_fqdn:$0,

[asset/vhost-validators]
action                     = list, create, update, delete, add_fqdn, delete_fqdn,
echo_request               = $0, $1,
