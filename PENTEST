### Autonomy Insecurity Pentest Toolkit ###
For an overview and further instructions, run `make help', or simply `make'.

The rest of this README pertains to pen testing and related processes and procedures.

################################################################################
#. Reporting
Findings() {{
    FileSystem() {{
        NonSegregation() {{
            Vuln() {{
                Certain filesystems on UNIX/Linux servers should be isolated, as the
                control of their usage is not exclusive to the operating system
                processes.  Several such filesystems were found to exist on the host
                inspected.
            }}
            Risk() {{
                Any set of commands capable of triggering an event log, can be
                used to perform a denial-of-service attack on the target host.
                This will result in sever runtime per-formance hit, and ultimately
                lead to a complete service failure.
            }}
            Reme() {{
                The following filesystems should be segregated:
                * /var, and /tmp – to protect the root partition
                * /var/log, and /var/tmp – to protect the /var partition
                  * For /var/tmp specifically, the alternate and recommended
                    solution is to simply remove the di-rectory, and replace it
                    with a symbolic link pointing back to /tmp.
            }}
        }}
    }}
    Logging() {{
        Syslog(No logging remote syslog server) {{
            Vuln() {{
                Log events are stored locally, however they are not replicated
                to a remote syslog server.
            }}
            Risk() {{
                This means the on the event that a host is compromised, the
                attacket may be able to evade detection.
            }}
            Reme() {{
                Install a syslog server on an internal network to which this
                host can attain connectivity to, and log to this host all
                critical security events, such as authentication,
                authorisation, and session data.
            }}
        }}
    }}
    KernelParameters() {{
        Vuln(sysctl[kernel.sysrq] != 0) {{
            The System Request debugging functionality of the kernel has not been
            disabled.
        }}
        Vuln(sysctl[kernel.core_uses_pid] != 1) {{
            Core dump filenames do not relay the PID of the rougue process. This
            can hinder audit and debug activities.
        }}
        Vuln(sysctl[kernel.exec-shield] != 1) {{
            The kernel exec-shield is inactive.
        }}
        Vuln(sysctl[kernel.randomize_va_space] == 0) {{
            ASLR is inactive.
        }}
        Vulnz(sysctl[net.ipv4.ip_forward] == 0) {{
            These vulnerabilities pertain to hosts that by design, are not to
            forward packaets (i.e., non-router hosts).

            ICMP redirect messages on hosts that are not designated to act as
            routers, should not be switched on, unless there are external
            overruling reasons mandating other-wise.

            Vuln(sysctl[net.ipv4.ip_forward] != 0) {{
                This host is not acting as a rounter, and hence this parameter
                should be switched off.
            }}
            Vuln(sysctl[net.ipv4.conf.(all|default).send_redirects] != 0) {{
                ICMP redirect messages are used by network gateways to inform a
                host sending data to forward packets to a different gateway. If
                a system is not configured to act as a gateway, then the system
                should never need to send ICMP redirect messages.  Doing so may
                provide the potential attacker additional leverage from which
                to carry out an attack.
            }}
            Vuln(sysctl[net.ipv4.conf.(all|default).(accept|secure)_redirects] != 0) {{
                Similarly, if there exists only one designated gateway for the
                target host, then it is safe to ignore any incoming ICMP
                redirect messages.  These messages could not be generated in
                such a case, because there is only one path out of the network.

                An attacker can forge redirect messages to install bogus routes.
                This action might initiate a denial-of-service attack if a newly
                specified router is maliciously or otherwise advertised.

                Similarly, this technique could be used to force network packets
                to be routed through an attacker's machine, where the packets
                could be inspected, captured, or modified - allowing for a MITM
                attack.

                Although there are rules governing valid ICMP redirect messages,
                all of them can be easily spoofed.
            }}
            Vuln(sysctl[net.ipv4.conf.(all|default).rp_filter] != 1) {{
                Do use Source Route Verification

                Enable source validation by reversed path, as specified in RFC1812.

                The SRV mechanism verifies that a packet comes in on an expected
                network interface. The routing table is consulted for each
                incoming packet. The interface the packet comes in on must match
                the interface that would be used to reach the source of the packet.
                If these interfaces do not match, the packet is discarded. This
                feature is enabled by default.

                Source route verification adds overhead to packet processing and
                might not work in environments where asymmetric routing occurs.
                Source route verification is controlled by the following parameters:

                Leave it enabled unless it causes performance or routing problems.
             }}
            Vuln(sysctl[net.ipv4.conf.(all|default).accept_source_route] != 0) {{
                Do not accept Source Routing

                Do not accept source routing; source routing has been used in
                attacks, and legitimate uses of source routing are few. It is
                a good idea to discard all packets that use source routing,
                unless you have a specific need for them.
            }}
            Vuln(sysctl[net.ipv4.conf.(all|default).log_martians] != 1) {{
                Log packets with impossible addresses to kernel log?
            }}
        }}
        Vuln(sysctl[net.ipv6.conf.(all|default).disable_ipv6] != 1) {{
            PIv6 is not disabled.
        }}
        Vulnz(TCPSYNCookies) {{
            Vuln(sysctl[net.ipv4.tcp_syncookies] != 1) {{
                TCP SYN Cookies have not been enabled.
            }}
            Vuln(sysctl[net.ipv4.tcp_synack_retries] > 2) {{
                Retry-count for TCP SYN Cookies is too high.
            }}
        }}
        Vuln(sysctl[net.ipv4.icmp_echo_ignore_broadcasts] != 1) {{
            Host responds to broadcast pings (even though this conforms to the RFC).
        }}
        Vuln(PAM) {{
            Vuln(su) {{
                Open PAM Restrictions for Privilege Escalation

                Currently, users with the root password can su to to root,
                despite their existing group membership.  While this may
                sound excruciatingly self-evident, there should be no reason
                for any user who cognisant of the root password and gains
                shell access to this host, to be at liberty to escalate
                their privileges.

                While this ir only a concern if the host will allow shell
                access to non-administrative account holders, there is
                in general no counter-reason for not securing PAM in order
                to irradicate such a venue all together.
            }}
        }}
        Vulnz(Limits) {{
            Vuln(nproc) {{
                NPROC is unbound.
                No limit set on the number of processes that a user - system or
                otherwise - can launch.  This leaves the host vulnerable to a
                denial-of-service attack by means of a fork bomb; the following
                bourne shell demonstrates an example of such an attack:

                    :(){ :|:&:|: };:;
            }}
        }}
        Vulnz(Audit) {{
            The user `xxx' is a generic account, and not tied to a particular
            user.  Standard audit requirements stipulate that all accounts
            should be solely tied to a single user.
        }}
    }}
}}

TODO() {{
    HIDS - AIDE
    External libs shipped with 3rd party software
    host-based firewall {{
        Enable a stateful iptables rule set which allows only access from
        hosts which initially require access.  If the IPv6 interface is
        left enabled, implement an effective ip6tables rule set.

        Restrict outgoing ssh access from hosts.

        Only allow incoming ssh requests sourced from a the set of hosts
        authorised for management.
    }}
    sshd() {{
        PermitRootLogin no
        AllowTcpForwarding no
    }}
    default umask
}}


################################################################################
Application() {{
    Authentication() {{
        To ensure only properly authenticated users can get access to application.
    }}
    Authorisation() {{
        To ensure users can only access functions/information they are authorised to.
    }}
    SessionManagement() {{
        To ensure session is maintained securely against session hijacking attempts.
    }}
    InputValidation() {{
        To ensure only required inputs are accepted by application.
    }}
    Logic(Business|App) {{
        To ensure users cannot bypass the logic of applications.
    }}
    InformationLeakage() {{
        To ensure no sensitive information is exposed to unauthorised user.
    }}
}}


################################################################################
#. Process

Pentests(Windowz) {{
    COM(ComputerObjectModel) {{
        The family of COM technologies include COM+, Distributed COM (DCOM), and
        ActiveX Controls.  COM+ is a whole bunch of stuff (starting w/COM,
        DCOM, MTS), while COM is just COM.

        COM+ objects {{
            COM+ is the name of the COM-based services and technologies first
            released in Windows 2000.  COM+ brought together the technology of
            COM components and the application host of Microsoft Transaction
            Server (MTS).  COM+ automatically handles programming tasks such as
            resource pooling, disconnected applications, event publication and
            subscription and distributed transactions.

            DCOM {{
                DCOM objects can be called remotely over a network.
            }}
        }}

        COM objects are identified by {{
            CLSIDs (Class IDs) {{
                CLSIDs refer to particular versions of COM objects installed on the
                system and will change for a given component when a new version is
                deployed.  For example:

                Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Classes\InternetExplorer.Application\CLSID
            }}

            PROGIDs (Programmatic Identifiers) {{
                PROGIDs are more human-readable
                text identifiers given to COM objects, and change less frequently to
                allow callers to reference a relatively constant identifier for the
                COM object in question.

                PROGIDs are typically used to access COM objects in WSH scripts.
            }}
        }}
    }}

    Toolz() {{
        eventvwr.msc {{
            Log size on Windows XP
        }}

        regedit.exe {{
            The registry contains the names, identifiers, and paths to
            binaries of all the COM objects installed on a Windows system.
        }}

        oleview.exe - OLE/COM Object Viewer {{
            This utility (part of the Win2K Resource Kit) presents a tree view
            of installed COM objects organized by various categories and sorted
            alphabetically within them.  It can be used to locate the ClassID
            of a given COM object which can then be search for in the Windows
            registry via regedit.exe
        }}

        dcomcnfg.exe - COM+ Explorer {{
            The COM+ Explorer is a built-in tool for viewing and configuring
            DCOM and other COM+ objects.  This way, the configuration of the
            objects can be decloaked, including security settings such as
            access permissions - whether they may be called remotely, and if
            so, whether network traffic to and from them is encrypted or not.
        }}

        WSHScripting(Wscript.exe, Cscript.exe) {{
            Wscript.exe {{
                The interpreter for scripts requiring user-interaction via popups
                dialogue windows
            }}

            Cscript.exe {{
                The real-mode command-line tool.

                See the following scripts {{
                    xmlHttpGetBinary.vbs {{
                        Retrieving External Files via HTTP
                    }}

                    gatherNetworkInfo.vbs {{
                        Dumpint Configuration Data

                        This file is already available on Windows 7 hosts at
                            C:\Windows\System32\gatherNetworkInfo.vbs
                        ...but added here for completeness.

                        It includes:
                            CPU type, installed memory, and BIOS version
                            OS version and patches applied
                            Current username and domain
                            Details on installed nw adapters
                            DNS settings and cache content
                            ARP cache content
                            Windows file shares
                            Windows firewall configuration and rules
                    }}

                    AccessSQLServers.vbs {{
                        Accessing a Database

                        ADO {{
                            ActiveX Data Objects (ADO) is a MS API that allows
                            access to multiple data sources via a set of COM
                            objects.  It is easy to connect to databases, execute
                            SQL statements, and retrieve results from WSH scripts
                            with ADO.
                        }}
                    }}
                }}
            }}

            Often written in JScript (.js) or VBScript (.vbs)
            AppActivate() and SendKeys() - Userd to simulate keyboard input to a running application.
            CreateObject() and GetObject() - Allow access to COM object interfaces
            RegRead(), RegWrite(), RegDelete() - Obvious what these do
            Run() - Spawns a new process with the specified commandline
            Exec() - Runs a command in a child command shell with access to standard I/O streams
            Execute() - Pushes a script to a remote computer and executes it

            COM(Combining COM and WSH) {{
                WSH scripts can call COM objects, thereby enabling commandline access to {{
                    * The Windows Registry
                    * System Configuration
                    * Databases
                    * AD
                    * WMI (Windows Management Interface)
                    * Apps (e.g., IE, MS Office)
                    * Netword resources
                    * Hardware resources (HDD, Microphones, Speakers, Cameras, etc)
                }}
            }}
        }}
    }}
}}

Pentests(StaticAnalysis) {{
    Pentests(Cisco) {{
        Check for weak passwords
            Feed a file with the enable secret in `username:$1$...' format to `john'
        Check for snmp with public strings or broadcasts
        Check whore (any-any) rules
        Check for whore masks:
            ip route    : 255.255.255.255
            network     : 255.255.255.255
            permit      : 0.0.0.0
            deny        : 0.0.0.0
        Use nipper to do further reviews
    }}
}}

Pentest(Net) {{
    nmap -sT -sV <target>

    Pentest(SNMP) {{
        snmpwalk -Ov -cpublic <target>
    }}
}}

Pentest(Passwordz) {{
     john --incremental --session=stoned --stdout=10 >> /srv/pot/pot
     hydra -vV -t1 -m LH -lAdministrator -P /srv/pot/pot 172.31.69.114 smbnt
}}

LinuxMisc() {{
    Retouch() {{
        data $(date +'%m%d%H%M%Y.%S')
        date -d @$(($(date +%s) - $((24*3600)))) +'%x'
    }}
    IP() {{
        RemoveIP() {{
            ip address flush dev eth0
        }}
    }}
    Chroot() {{
        chroot --userwhatever=anz / /bin/bash (bypasses the /bin/false)
        mount /dev/os/root  /mnt/chroot/
        mount -o bind /proc /mnt/chroot/proc
        mount -o bind /dev  /mnt/chroot/dev
        chroot /mnt/chroot  /bin/bash
    }}
    PackageMgmt() {{
        Check the last time system update was carried out
    }}
    SSH() {{
        Check ssh config - server and client
    }}
    TCPWrappers() {{
        The default terminating rule should be a DENY in /etc/hosts.deny,
        and all authorised protocols should have explicit rules defined for
        them in /etc/hosts.allow.  This includes the secure shell protocol
        amongst possible others.

        This is a recommendation on the principal of least-privilege, and
        by itself exposes no direct vulnerability.

        Script() {{
            for i in /sbin/* /usr/sbin/*; do
                echo -n $i...
                sudo ldd $i|grep -q libwrap && echo Yes || echo No
            done|grep Yes
        }}

        File(hosts.deny) {{
            ALL:ALL
        }}

        File(hosts.allow) {{
            sshd: <host>|<nw>/<nm> [,<host>|<nw>/<nm> [,...]]
            ALL EXCEPT sshd: localhost, <host>|<nw>/<nm> [,<host>|<nw>/<nm> [,...]]
        }}
    }}
    Documentation() {{
         7z a -p<passwd> -mem=AES256 -tzip "<ouput-filename>" "<input-filename>.pdf"
    }}
}}

Reversing() {{
    0. If you see the same register repeatedly used and updated throughout
       the same function, it is a strong indication that register has been
       used to store a local variable.
    1. Hard-coded addresses are rarely used for anything other than pointing
       to the executable's data section.  The other common case where data
       is stored inside an executable's data section, is where global
       variables have been defined.  As with pre-initializaed data, the
       compiler uses hard-coded memory addresses to store global variables,
       which make them readily recognizeable when reversing.
}}

--[ TODO - Suspend to Disk on FDE System
{{
    You can suspend your machine with 'echo disk > /sys/power/state'
    after placing resume=/dev/swappartition on the kernel command line
    in your bootloader's configuration file.

    It creates an image which is saved in your active swap. Upon the next
    boot, pass the 'resume=/dev/swappartition' argument to the kernel to
    have it detect the saved image, restore memory state from it, and
    continue to run as before. If you do not want the previous state to
    be reloaded, then use the 'noresume' kernel command line argument.
    Note, however, that fsck will be run on your filesystems and you will
    need to run mkswap against the swap partition used for the suspend.
}}
